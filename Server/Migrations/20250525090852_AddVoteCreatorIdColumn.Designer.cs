// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleVote.Server.Datas;

#nullable disable

namespace sr_server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250525090852_AddVoteCreatorIdColumn")]
    partial class AddVoteCreatorIdColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("SimpleVote.Server.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.Vote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiredTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaximumCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.VoteSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VoteId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VoteId");

                    b.ToTable("VoteSubjects", (string)null);
                });

            modelBuilder.Entity("SimpleVote.Server.Models.VoteSubjectInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("InputTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VoterId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("VoteInputs", (string)null);
                });

            modelBuilder.Entity("SimpleVote.Server.Models.Vote", b =>
                {
                    b.HasOne("SimpleVote.Server.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.VoteSubject", b =>
                {
                    b.HasOne("SimpleVote.Server.Models.Vote", "Vote")
                        .WithMany("Subjects")
                        .HasForeignKey("VoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vote");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.VoteSubjectInput", b =>
                {
                    b.HasOne("SimpleVote.Server.Models.VoteSubject", "VoteSubject")
                        .WithMany("Voters")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoteSubject");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.Vote", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SimpleVote.Server.Models.VoteSubject", b =>
                {
                    b.Navigation("Voters");
                });
#pragma warning restore 612, 618
        }
    }
}
